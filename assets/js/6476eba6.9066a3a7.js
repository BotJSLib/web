"use strict";(self.webpackChunkbotjs_web=self.webpackChunkbotjs_web||[]).push([[827],{1436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=t(1527),a=t(8672);const o={sidebar_position:3},r="Usage",i={id:"usage",title:"Usage",description:"Creating a bot",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/docs/usage",draft:!1,unlisted:!1,editUrl:"https://github.com/BotJSLib/web/tree/main/docs/usage.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Base Access",permalink:"/docs/base"}},l={},d=[{value:"Creating a bot",id:"creating-a-bot",level:2},{value:"Messaging",id:"messaging",level:2},{value:"Starting a development server",id:"starting-a-development-server",level:2},{value:"Building the bot",id:"building-the-bot",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-bot",children:"Creating a bot"}),"\n",(0,s.jsxs)(n.p,{children:["To create a bot, you need to instantiate the ",(0,s.jsx)(n.code,{children:"Manager"})," class from the ",(0,s.jsx)(n.code,{children:"@michelo11/botjs"})," package."]}),"\n",(0,s.jsx)(n.p,{children:"Here is the standard implementation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { dirname, isESM } from "@discordx/importer";\nimport { BotManager, Platform } from "@michelo11/botjs";\nimport "dotenv/config";\n\nconst manager = new BotManager();\n\n// Register your bots and their tokens here\nmanager.create(process.env.DISCORD_TOKEN!, Platform.Discord);\nmanager.create(process.env.TELEGRAM_TOKEN!, Platform.Telegram);\nmanager.create(process.env.SLACK_TOKEN!, Platform.Slack, {\n  signingSecret: process.env.SLACK_SIGNING_SECRET!,\n  appToken: process.env.SLACK_SOCKETS!,\n  token: process.env.SLACK_TOKEN!,\n  port: 3001,\n});\nmanager.create(process.env.WHATSAPP_TOKEN!, Platform.Whatsapp, {\n  sid: process.env.TWILIO_SID!,\n  port: 3000,\n  number: process.env.WHATSAPP_NUMBER!,\n});\n\n// Load all files in this folder\nconst folder = isESM() ? dirname(import.meta.url) : __dirname;\n\n// Start the bot\nif (process.env.BOTJS_WATCH === "true") {\n  manager.startDev(folder);\n} else {\n  manager.start().then(() => {\n    manager.loadFiles(folder);\n  });\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"messaging",children:"Messaging"}),"\n",(0,s.jsx)(n.p,{children:"Bot.js exposes a simple Message Builder, this allows to create messages with text, buttons and other components that are supported by the platforms."}),"\n",(0,s.jsx)(n.p,{children:"Here is an example of a message with a text and a button:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { MessageBuilder } from "@michelo11/botjs";\n\nconst message = new MessageBuilder("Here is your button:").addButton(\n  new ButtonBuilder("Click me!", "button")\n);\n\n// Send the message\nuser.send(message);\n'})}),"\n",(0,s.jsx)(n.h2,{id:"starting-a-development-server",children:"Starting a development server"}),"\n",(0,s.jsx)(n.p,{children:"Bot.js comes with a built-in hot reloading system. This means that when you apply an edit, the bot will not need to be restarted, the files will be reloaded automatically. Thanks to this, the hot reload only takes a few milliseconds."}),"\n",(0,s.jsx)(n.p,{children:"To start the bot, you need to run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx botjs dev\n# OR\nyarn botjs dev\n# OR\npnpm botjs dev\n"})}),"\n",(0,s.jsx)(n.h2,{id:"building-the-bot",children:"Building the bot"}),"\n",(0,s.jsx)(n.p,{children:"To build the bot, you need to run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx botjs build\n# OR\nyarn botjs build\n# OR\npnpm botjs build\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8672:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>r});var s=t(959);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);